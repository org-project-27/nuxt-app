name: Deploy Nuxt.js App

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create GitHub deployment
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/deployments
          ref: ${{ github.sha }}
          required_contexts: '[]'
          environment: 'production'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ./faynn.com/nuxt-app
            pm2 stop nuxt-app
            git pull
            npm install
            pm2 start nuxt-app
          EOF
      
      - name: Update deployment status to success
        if: success()
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/deployments/${{ fromJson(steps.create_deployment.outputs.data).id }}/statuses
          state: 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update deployment status to failure
        if: failure()
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/deployments/${{ fromJson(steps.create_deployment.outputs.data).id }}/statuses
          state: 'failure'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
