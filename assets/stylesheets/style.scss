@import "./utilities/colors";
@import "./utilities/configs";
@import "./utilities/animations";
@import "./utilities/responsive";
@import "./utilities/fonts";


*{
  margin: 0;
  padding: 0;
}

html{
  background-color: $html_background_color;
  & > * {
    padding: 0;
    margin: 0;
    color: $text_color;
  }
}
body{
  font-family: $font-family;
  background-color: $body_background_color;
  .container {
    @include animate-fade-in(1s);
    background-color: $main_background_color;
    min-width: 95vw;
    min-height: 100vh;
  }
}

a {
  transition-duration: $default-transition-duration;
  color: $link-color;
  font-size: $font-size-normal;
  user-select: none;
  text-decoration: none;
  white-space: nowrap;
  cursor: pointer !important;
  &:hover{
    color: lighten($link-color, 10%);
    opacity: .9;
  }
  &.decoration{
    text-decoration: underline;
  }
}


button.type_1, a.type_1 {
  border: 3px solid transparent;
  width: 100%;
  text-align: center;
  padding: .5rem;
  font-weight: 500;
  color: $second_gray_color;
  &.active,
  &:hover
  {
    color: $main_color;
    border-bottom: 3px solid $main_color;
  }

  &:hover {
    background-color: lighten($main_white_color, 3%);
  }
}
button.type_2,
a.type_2 {
  color: $main_color;
  font-weight: normal;
  font-size: $font-size-small;
  background-color: $main_color_transparent;
  padding: .8em 1.2em;
  border-radius: 8px;
  border: none;
}


button.type_3, a.type_3 {
  color: $main_white_color;
  font-weight: 500;
  font-size: $font-size-small;
  background-color: $main_color;
  padding: .8em 1rem;
  border-radius: 8px;
  cursor: pointer;
  transition-duration: $default-transition-duration;
  border: none;
  &:hover{
    opacity: .9;
    box-shadow: $box_shadow_3;
  }
}


button.type_4, a.type_4 {
  font-weight: 500;
  font-size: $font-size-normal;
  color: $main_color;
  background: transparent;
  padding: .8em .5em;
  border-radius: 8px;
  &:hover{
    opacity: .9;
  }
}

// Auto complete styles
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  transition: background-color 5000s ease-in-out 0s;
  -webkit-text-fill-color: $main_black_color;
  -webkit-box-shadow: 0 0 0px 1000px lighten($main_white_color, 3%) inset;
}

// Common used styles
br,
.cannot-select {
  user-select: none;
}
strong,
b {
  font-weight: bold;
}

.default-container {
  background-color: $main_white_color !important;
}

span.divider {
  display: block;
  width: 100%;
  padding: .5px 0;
  background: $default_border_color;
  margin: 1.5rem 0;
}

.flex-column-between-center{
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}
.flex-row-between-center{
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.flex-column-center{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.flex-row-center{
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.flex-column-start-center {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
}

.flex-row-start-center {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
}

.flex-column-end-center {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
}

.flex-row-end-center {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: center;
}

.flex-column-wrap {
  display: flex;
  flex-wrap: wrap;
}

.flex-column-no-wrap {
  display: flex;
  flex-wrap: nowrap;
}

.flex-column-align-start {
  display: flex;
  align-items: flex-start;
}

.flex-column-align-end {
  display: flex;
  align-items: flex-end;
}

.flex-column-justify-start {
  display: flex;
  justify-content: flex-start;
}

.flex-column-justify-end {
  display: flex;
  justify-content: flex-end;
}

.flex-column-space-around {
  display: flex;
  justify-content: space-around;
}

.flex-column-space-evenly {
  display: flex;
  justify-content: space-evenly;
}

.flex-column-wrap {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
}

.flex-column-no-wrap {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
}

.flex-column-align-start {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.flex-column-align-end {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

.flex-column-justify-start {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

.flex-column-justify-end {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}

.flex-column-space-around {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

.flex-column-space-evenly {
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
}

.default-writeable-styles {
  $writeable-input-width: 100%;

  label, span.message-area {
    user-select: none !important;
    cursor: pointer;
    color: $second_gray_color;
    font-size: $font-size-extra-small;
    position: relative;
    left: .1rem;
    transition-duration: $default-transition-duration;
  }

  label {
    font-weight: bold;
  }

  .input-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    overflow: hidden;
    margin: .3rem 0;
    transition-duration: $default-transition-duration;
    background-color: $main_background_color;
    border: 1px solid $default_border_color;
    border-radius: calc($default_border_radius / 3);
    & > input,
    & > textarea {
      width: $writeable-input-width;
      background-color: transparent;
      outline: none;
      border: none;
      font-size: $font-size-input;
    }
  }

  .message-box {
    transition-duration: $default-transition-duration;
    display: flex;
    align-items: center;
    gap: 4px;
  }

  &.active {
    label {
      color: $main_color;
    }
    .input-container {
      box-shadow: $box_shadow_main_color_0;
    }
  }

  &.error {
    .input-container {
      border-color: lighten($error_color, 40%);;
      background-color: lighten($error_color, 52%);

      .right-area,
      .left-area {
        border-color: lighten($error_color, 40%);;
      }
    }

    label {
      color: $error_color;
    }
  }

  &.warning {
    .input-container {
      border-color: lighten($warning_color, 10%);;
      background-color: lighten($warning_color, 29%);

      .right-area,
      .left-area {
        border-color: lighten($warning_color, 40%);;
      }
    }

    label {
      color: $warning_color;
    }
  }

  &.success {
    .message-area.success {
    }
  }

  &.disabled {
    opacity: .4;
    user-select: none;
    cursor: not-allowed !important;
    label, .message-area {
      cursor: not-allowed !important;
    }
    .input-container {
      cursor: not-allowed !important;
      input {
        cursor: not-allowed !important;
        user-select: none;
      }
    }
  }
}

button.transparent-btn{
  background: transparent;
  border: none;
  cursor: pointer;
}
