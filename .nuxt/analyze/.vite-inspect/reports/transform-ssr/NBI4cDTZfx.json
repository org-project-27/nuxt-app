{
  "resolvedId": "/Users/vugarsafarzada/Desktop/Files/Develop/My Projects/e-commercial-app/nuxt-app/assets/scripts/types/models/userAuthModels.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { deepCopy } from \"assets/scripts/helpers/generalHelpers\";\n\n\n// Signup data modeling:\nexport interface Signup extends Login {\n    fullname: string | null;\n}\nconst signup: Signup = {\n    fullname: null,\n    email: null,\n    password: null,\n};\n\n// Login data modeling:\nexport interface Login {\n    email: string | null,\n    password: string | null\n}\nconst login: Login = {\n    email: null,\n    password: null,\n};\n\n// Tokens data modeling:\nexport interface TokensModel {\n    access_token: string | null,\n    refresh_token: string | null,\n    expires_in: number | null\n}\n\nconst tokensResponse: TokensModel = {\n    access_token: null,\n    refresh_token: null,\n    expires_in: 0\n};\n\n// Signup response data modeling:\nexport interface SignupResponseModel {\n    record_id: number | null,\n    message: string | null,\n    success: boolean | null,\n    email: string | null\n}\nconst signupResponse: SignupResponseModel = {\n    record_id: null,\n    message: null,\n    success: null,\n    email: null\n};\n\n// Login response data modeling:\nexport interface LoginResponseModel {\n    message: string | null,\n    success: string | null,\n    data: TokensModel | null\n}\nconst loginResponse: LoginResponseModel = {\n    message: null,\n    success: null,\n    data: tokensResponse\n};\n\n\n// Auth response data modeling:\nexport interface AuthResponseModel {\n    email: string | null,\n    fullname: string | null,\n    user_id: number | null\n}\nconst auth: AuthResponseModel = {\n    email: null,\n    fullname: null,\n    user_id: null\n}\n\n\nconst getModelSignup = () : Signup => deepCopy(signup);\nconst getModelLogin = () : Login  => deepCopy(login);\nconst getModelAuthResponse = () : AuthResponseModel => deepCopy(auth);\nconst getModelTokensResponse = () : TokensModel => deepCopy(tokensResponse);\nconst getModelSignupResponse = () : SignupResponseModel => deepCopy(signupResponse);\nconst getModelLoginResponse = () : LoginResponseModel => deepCopy(loginResponse);\n\n\nexport const models: {\n    authProgressIsLoading: boolean | null,\n    afterAuthPath: string,\n    modelAuth: AuthResponseModel,\n    modelToken: TokensModel | any,\n    modelSignup: Signup,\n    modelLogin: Login,\n} = {\n    authProgressIsLoading: null,\n    afterAuthPath: '/account/user',\n    modelAuth: getModelAuthResponse(),\n    modelToken: getModelTokensResponse(),\n    modelSignup: getModelSignup(),\n    modelLogin: getModelLogin(),\n}\nexport const defaults = {\n    defaultSignup: getModelSignup,\n    defaultLogin: getModelLogin,\n    defaultResponses: {\n        auth: getModelAuthResponse,\n        tokens: getModelTokensResponse,\n        signup: getModelSignupResponse,\n        login: getModelLoginResponse,\n    }\n}",
      "start": 1708867444111,
      "end": 1708867444163,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708867444163,
      "end": 1708867444163,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708867444163,
      "end": 1708867444163,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708867444163,
      "end": 1708867444163,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708867444163,
      "end": 1708867444163,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708867444163,
      "end": 1708867444163,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708867444163,
      "end": 1708867444163,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { deepCopy } from \"assets/scripts/helpers/generalHelpers\";\nconst signup = {\n  fullname: null,\n  email: null,\n  password: null\n};\nconst login = {\n  email: null,\n  password: null\n};\nconst tokensResponse = {\n  access_token: null,\n  refresh_token: null,\n  expires_in: 0\n};\nconst signupResponse = {\n  record_id: null,\n  message: null,\n  success: null,\n  email: null\n};\nconst loginResponse = {\n  message: null,\n  success: null,\n  data: tokensResponse\n};\nconst auth = {\n  email: null,\n  fullname: null,\n  user_id: null\n};\nconst getModelSignup = () => deepCopy(signup);\nconst getModelLogin = () => deepCopy(login);\nconst getModelAuthResponse = () => deepCopy(auth);\nconst getModelTokensResponse = () => deepCopy(tokensResponse);\nconst getModelSignupResponse = () => deepCopy(signupResponse);\nconst getModelLoginResponse = () => deepCopy(loginResponse);\nexport const models = {\n  authProgressIsLoading: null,\n  afterAuthPath: \"/account/user\",\n  modelAuth: getModelAuthResponse(),\n  modelToken: getModelTokensResponse(),\n  modelSignup: getModelSignup(),\n  modelLogin: getModelLogin()\n};\nexport const defaults = {\n  defaultSignup: getModelSignup,\n  defaultLogin: getModelLogin,\n  defaultResponses: {\n    auth: getModelAuthResponse,\n    tokens: getModelTokensResponse,\n    signup: getModelSignupResponse,\n    login: getModelLoginResponse\n  }\n};\n",
      "start": 1708867444163,
      "end": 1708867445014,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/vugarsafarzada/Desktop/Files/Develop/My Projects/e-commercial-app/nuxt-app/assets/scripts/types/models/userAuthModels.ts"
        ],
        "sourcesContent": [
          "import { deepCopy } from \"assets/scripts/helpers/generalHelpers\";\n\n\n// Signup data modeling:\nexport interface Signup extends Login {\n    fullname: string | null;\n}\nconst signup: Signup = {\n    fullname: null,\n    email: null,\n    password: null,\n};\n\n// Login data modeling:\nexport interface Login {\n    email: string | null,\n    password: string | null\n}\nconst login: Login = {\n    email: null,\n    password: null,\n};\n\n// Tokens data modeling:\nexport interface TokensModel {\n    access_token: string | null,\n    refresh_token: string | null,\n    expires_in: number | null\n}\n\nconst tokensResponse: TokensModel = {\n    access_token: null,\n    refresh_token: null,\n    expires_in: 0\n};\n\n// Signup response data modeling:\nexport interface SignupResponseModel {\n    record_id: number | null,\n    message: string | null,\n    success: boolean | null,\n    email: string | null\n}\nconst signupResponse: SignupResponseModel = {\n    record_id: null,\n    message: null,\n    success: null,\n    email: null\n};\n\n// Login response data modeling:\nexport interface LoginResponseModel {\n    message: string | null,\n    success: string | null,\n    data: TokensModel | null\n}\nconst loginResponse: LoginResponseModel = {\n    message: null,\n    success: null,\n    data: tokensResponse\n};\n\n\n// Auth response data modeling:\nexport interface AuthResponseModel {\n    email: string | null,\n    fullname: string | null,\n    user_id: number | null\n}\nconst auth: AuthResponseModel = {\n    email: null,\n    fullname: null,\n    user_id: null\n}\n\n\nconst getModelSignup = () : Signup => deepCopy(signup);\nconst getModelLogin = () : Login  => deepCopy(login);\nconst getModelAuthResponse = () : AuthResponseModel => deepCopy(auth);\nconst getModelTokensResponse = () : TokensModel => deepCopy(tokensResponse);\nconst getModelSignupResponse = () : SignupResponseModel => deepCopy(signupResponse);\nconst getModelLoginResponse = () : LoginResponseModel => deepCopy(loginResponse);\n\n\nexport const models: {\n    authProgressIsLoading: boolean | null,\n    afterAuthPath: string,\n    modelAuth: AuthResponseModel,\n    modelToken: TokensModel | any,\n    modelSignup: Signup,\n    modelLogin: Login,\n} = {\n    authProgressIsLoading: null,\n    afterAuthPath: '/account/user',\n    modelAuth: getModelAuthResponse(),\n    modelToken: getModelTokensResponse(),\n    modelSignup: getModelSignup(),\n    modelLogin: getModelLogin(),\n}\nexport const defaults = {\n    defaultSignup: getModelSignup,\n    defaultLogin: getModelLogin,\n    defaultResponses: {\n        auth: getModelAuthResponse,\n        tokens: getModelTokensResponse,\n        signup: getModelSignupResponse,\n        login: getModelLoginResponse,\n    }\n}"
        ],
        "mappings": "AAAA,SAAS,gBAAgB;AAOzB,MAAM,SAAiB;AAAA,EACnB,UAAU;AAAA,EACV,OAAO;AAAA,EACP,UAAU;AACd;AAOA,MAAM,QAAe;AAAA,EACjB,OAAO;AAAA,EACP,UAAU;AACd;AASA,MAAM,iBAA8B;AAAA,EAChC,cAAc;AAAA,EACd,eAAe;AAAA,EACf,YAAY;AAChB;AASA,MAAM,iBAAsC;AAAA,EACxC,WAAW;AAAA,EACX,SAAS;AAAA,EACT,SAAS;AAAA,EACT,OAAO;AACX;AAQA,MAAM,gBAAoC;AAAA,EACtC,SAAS;AAAA,EACT,SAAS;AAAA,EACT,MAAM;AACV;AASA,MAAM,OAA0B;AAAA,EAC5B,OAAO;AAAA,EACP,UAAU;AAAA,EACV,SAAS;AACb;AAGA,MAAM,iBAAiB,MAAe,SAAS,MAAM;AACrD,MAAM,gBAAgB,MAAe,SAAS,KAAK;AACnD,MAAM,uBAAuB,MAA0B,SAAS,IAAI;AACpE,MAAM,yBAAyB,MAAoB,SAAS,cAAc;AAC1E,MAAM,yBAAyB,MAA4B,SAAS,cAAc;AAClF,MAAM,wBAAwB,MAA2B,SAAS,aAAa;AAGxE,aAAM,SAOT;AAAA,EACA,uBAAuB;AAAA,EACvB,eAAe;AAAA,EACf,WAAW,qBAAqB;AAAA,EAChC,YAAY,uBAAuB;AAAA,EACnC,aAAa,eAAe;AAAA,EAC5B,YAAY,cAAc;AAC9B;AACO,aAAM,WAAW;AAAA,EACpB,eAAe;AAAA,EACf,cAAc;AAAA,EACd,kBAAkB;AAAA,IACd,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,OAAO;AAAA,EACX;AACJ;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1708867445014,
      "end": 1708867445014,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708867445014,
      "end": 1708867445014,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708867445014,
      "end": 1708867445014,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708867445014,
      "end": 1708867445014,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708867445014,
      "end": 1708867445014,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708867445014,
      "end": 1708867445014,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708867445014,
      "end": 1708867445014,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708867445014,
      "end": 1708867445014,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708867445014,
      "end": 1708867445014,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708867445015,
      "end": 1708867445015,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708867445015,
      "end": 1708867445015,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708867445015,
      "end": 1708867445015,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708867445015,
      "end": 1708867445015,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708867445015,
      "end": 1708867445015,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708867445015,
      "end": 1708867445015,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708867445015,
      "end": 1708867445015,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708867445015,
      "end": 1708867445015,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708867445015,
      "end": 1708867445015,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708867445015,
      "end": 1708867445015,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708867445016,
      "end": 1708867445016,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708867445016,
      "end": 1708867445016,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708867445016,
      "end": 1708867445018,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708867445016,
      "end": 1708867445019,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708867445019,
      "end": 1708867445019,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708867445019,
      "end": 1708867445019,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708867445019,
      "end": 1708867445019,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708867445019,
      "end": 1708867445019,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1708867445019,
      "end": 1708867445020,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708867445020,
      "end": 1708867445020,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708867445020,
      "end": 1708867445020,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708867445020,
      "end": 1708867445020,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708867445020,
      "end": 1708867445020,
      "order": "normal"
    }
  ]
}
