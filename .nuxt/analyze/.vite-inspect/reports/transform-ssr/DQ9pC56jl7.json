{
  "resolvedId": "/Users/vugarsafarzada/Desktop/Files/Develop/My Projects/e-commercial-app/nuxt-app/assets/scripts/components/inputComponent.js?vue&type=script&src=true&lang.js",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import {defineComponent} from 'vue';\nimport {\n    developerAnnounce,\n    generateUniqueId,\n} from 'assets/scripts/helpers/generalHelpers.js';\nimport {inputCategories, inputTypes} from \"assets/scripts/constants/inputConstants.js\";\nimport colorUtilities from \"assets/scripts/constants/colorUtilities.js\";\n\n//#TODO: This components aren't Vue file. Be careful for it!\nimport IconComponent from \"assets/scripts/components/iconComponent.js\";\nimport LoadingComponent from \"assets/scripts/components/loadingComponent.js\";\n\nexport default defineComponent({\n    name: \"InputComponent\",\n    components: { IconComponent, LoadingComponent },\n    emits: [\n        'click',\n        'inputFocus',\n        'readyForView',\n        'update:modelValue',\n    ],\n    props: {\n        inputStyle: Object,\n        style: Object,\n        leftIcon: Object,\n        id: [String, Number],\n        required: Boolean,\n        autofocus: Boolean,\n        readonly: Boolean,\n        autocomplete: String,\n        disabled: Boolean,\n        pattern: String,\n        maxlength: [Number, String],\n        value: [Number, String, Object, Boolean],\n        label: String,\n        htmlLabel: String,\n        isLoading: Boolean,\n        midSize: Boolean,\n        type: {\n            type: String,\n            default: () => 'text'\n        },\n        name: {\n            type: String,\n            default: () => 'text'\n        },\n        placeholder: String,\n        inputSize: {\n            type: Object,\n            default: () => {\n                return {\n                    width: '300px',\n                    height: '50px'\n                }\n            }\n        },\n        modelValue: {\n            default: () => null\n        },\n        clearable: {\n            type: Boolean,\n            default: () => false\n        },\n        hideMaxlengthCounter: {\n            type: Boolean,\n            default: () => false\n        },\n        buttonType: {\n            type: String,\n            default: () => '0'\n        },\n        showSuccess: {\n            type: Object,\n            default: () => {\n                return {\n                    message: null,\n                    highlight: false,\n                    icon: null\n                }\n            }\n        },\n        showInfo: {\n            type: Object,\n            default: () => {\n                return {\n                    message: null,\n                    highlight: false,\n                    icon: null\n                }\n            }\n        },\n        showWarning: {\n            type: Object,\n            default: () => {\n                return {\n                    message: null,\n                    highlight: false,\n                    icon: null\n                }\n            }\n        },\n        showError: {\n            type: Object,\n            default: () => {\n                return {\n                    message: null,\n                    highlight: false,\n                    icon: null\n                }\n            }\n        },\n    },\n    computed: {\n        colorUtilities() {\n            return colorUtilities\n        },\n        idComputed(){\n            if(!this.id){\n                developerAnnounce('Input component required an id!');\n                return this.generateUniqueId();\n            }\n            return this.id;\n        },\n        modelComputed:{\n            set(val){\n                if(!this.disabled){\n                    this.model = val;\n                    this.$emit('update:modelValue', val);\n                }\n            },\n            get(){\n                return this.model;\n            }\n        },\n        focusComputed: {\n            set(val){\n                this.inputFocus = val;\n                this.$emit('inputFocus', val);\n            },\n            get(){\n                return this.inputFocus;\n            }\n        },\n        labelActive(){\n            return this.label;\n        },\n        showMaxLengthCounter(){\n            return this.typing\n                && this.inputFocus\n                && (this.maxlength\n                    && this.modelValue\n                    && !this.hideMaxlengthCounter);\n        },\n        showClearButton(){\n            return !this.typing && (this.modelComputed && this.clearable);\n        },\n        showInputRightSideArea(){\n            if(this.inputCategory === 'password'){\n                return true;\n            } else {\n                return this.showMaxLengthCounter || this.showClearButton;\n            }\n        },\n        showInputLeftSideArea(){\n            return this.leftIcon;\n        },\n        inputCategory() {\n            if(this.type){\n                if(inputTypes.includes(this.type)){\n                    return Object.keys(inputCategories).find(key => {\n                        return inputCategories[key].includes(this.type)\n                    })\n                }\n            }\n            return null;\n        },\n        inputMessage(){\n            let messageData = {\n                key: null,\n                message: null,\n                color: null,\n                icon: null\n            }\n            if (this.showError.message || this.showError.highlight){\n                messageData.key = this.showError.highlight ? 'error' : null;\n                messageData.icon = this.showError.icon || 'error';\n                messageData.message = this.showError.message;\n                messageData.color = colorUtilities.$error_color;\n            } else if (this.showWarning.message || this.showWarning.highlight){\n                messageData.key = this.showWarning.highlight ? 'warning' : null;\n                messageData.icon = this.showWarning.icon || 'warning';\n                messageData.message = this.showWarning.message;\n                messageData.color = colorUtilities.$warning_color\n            } else if (this.showSuccess.message || this.showSuccess.highlight){\n                messageData.key = this.showSuccess.highlight ? 'success' : null;\n                messageData.icon = this.showSuccess.icon || 'check_circle';\n                messageData.message = this.showSuccess.message;\n                messageData.color = colorUtilities.$success_color_1;\n            } else if (this.showInfo.message || this.showInfo.highlight){\n                messageData.key = this.showInfo.highlight ? 'info' : null;\n                messageData.icon = this.showInfo.icon || 'info';\n                messageData.message = this.showInfo.message;\n                messageData.color = colorUtilities.$black_color;\n            }\n            return messageData\n        },\n        visibilityTrigger: {\n            set(val){\n                this.passwordVisibilityTrigger = val;\n            },\n            get(){\n                return this.passwordVisibilityTrigger;\n            }\n        }\n    },\n    data() {\n        return {\n            inputTypes,\n            model: null,\n            readyForView: false,\n            inputFocus: false,\n            typing: false,\n            debounceId: null,\n            passwordVisibilityTrigger: false\n        }\n    },\n    mounted() {\n        const input = this.$refs['input-component'];\n        if(input){\n            if(this.modelValue){\n                this.modelComputed = this.modelValue;\n            }\n            if(this.inputSize){\n                input.style.width = this.inputSize.width;\n                input.style.height = this.inputSize.height;\n            }\n            if(this.midSize){\n                input.style.width = 100 + 'px';\n                input.style.height = 30 + 'px';\n            }\n            if(this.style){\n                Object.entries(this.style).forEach(([key, value]) => {\n                    input.style[key] = value;\n                });\n            }\n        }\n        this.readyForView = true;\n    },\n    unmounted() {\n        this.readyForView = false;\n    },\n    watch: {\n        modelValue(val, oldVal){\n            if(val !== oldVal && !this.disabled){\n                this.modelComputed = this.modelValue;\n            }\n        },\n        readyForView(val) {\n                this.$emit('readyForView', val)\n        }\n    },\n    methods:{\n        generateUniqueId,\n        clearAllButton(){\n            this.modelComputed = null;\n            const input = document.getElementById(this.idComputed);\n            if(input){\n                input.focus();\n            }\n        },\n        handleInputChange(){\n            this.typing = true;\n            this.customDebounce(function (){\n                this.typing = false;\n            })();\n        },\n        customDebounce(func, delay = 400) {\n            const self = this\n            return function(...args) {\n                clearTimeout(self.debounceId);\n                self.debounceId = setTimeout(() => {\n                    func.apply(self, args);\n                }, delay);\n            };\n        },\n        iconColorDetecter(main) {\n            if(this.focusComputed){\n                return main ? main : colorUtilities.$black_color;\n            }\n            return colorUtilities.$black_color_4\n        },\n    }\n});",
      "start": 1708867444096,
      "end": 1708867444096,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708867444098,
      "end": 1708867444098,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { defineComponent } from \"vue\";\nimport {\n  developerAnnounce,\n  generateUniqueId\n} from \"assets/scripts/helpers/generalHelpers.js\";\nimport { inputCategories, inputTypes } from \"assets/scripts/constants/inputConstants.js\";\nimport colorUtilities from \"assets/scripts/constants/colorUtilities.js\";\nimport IconComponent from \"assets/scripts/components/iconComponent.js\";\nimport LoadingComponent from \"assets/scripts/components/loadingComponent.js\";\nexport default defineComponent({\n  name: \"InputComponent\",\n  components: { IconComponent, LoadingComponent },\n  emits: [\n    \"click\",\n    \"inputFocus\",\n    \"readyForView\",\n    \"update:modelValue\"\n  ],\n  props: {\n    inputStyle: Object,\n    style: Object,\n    leftIcon: Object,\n    id: [String, Number],\n    required: Boolean,\n    autofocus: Boolean,\n    readonly: Boolean,\n    autocomplete: String,\n    disabled: Boolean,\n    pattern: String,\n    maxlength: [Number, String],\n    value: [Number, String, Object, Boolean],\n    label: String,\n    htmlLabel: String,\n    isLoading: Boolean,\n    midSize: Boolean,\n    type: {\n      type: String,\n      default: () => \"text\"\n    },\n    name: {\n      type: String,\n      default: () => \"text\"\n    },\n    placeholder: String,\n    inputSize: {\n      type: Object,\n      default: () => {\n        return {\n          width: \"300px\",\n          height: \"50px\"\n        };\n      }\n    },\n    modelValue: {\n      default: () => null\n    },\n    clearable: {\n      type: Boolean,\n      default: () => false\n    },\n    hideMaxlengthCounter: {\n      type: Boolean,\n      default: () => false\n    },\n    buttonType: {\n      type: String,\n      default: () => \"0\"\n    },\n    showSuccess: {\n      type: Object,\n      default: () => {\n        return {\n          message: null,\n          highlight: false,\n          icon: null\n        };\n      }\n    },\n    showInfo: {\n      type: Object,\n      default: () => {\n        return {\n          message: null,\n          highlight: false,\n          icon: null\n        };\n      }\n    },\n    showWarning: {\n      type: Object,\n      default: () => {\n        return {\n          message: null,\n          highlight: false,\n          icon: null\n        };\n      }\n    },\n    showError: {\n      type: Object,\n      default: () => {\n        return {\n          message: null,\n          highlight: false,\n          icon: null\n        };\n      }\n    }\n  },\n  computed: {\n    colorUtilities() {\n      return colorUtilities;\n    },\n    idComputed() {\n      if (!this.id) {\n        developerAnnounce(\"Input component required an id!\");\n        return this.generateUniqueId();\n      }\n      return this.id;\n    },\n    modelComputed: {\n      set(val) {\n        if (!this.disabled) {\n          this.model = val;\n          this.$emit(\"update:modelValue\", val);\n        }\n      },\n      get() {\n        return this.model;\n      }\n    },\n    focusComputed: {\n      set(val) {\n        this.inputFocus = val;\n        this.$emit(\"inputFocus\", val);\n      },\n      get() {\n        return this.inputFocus;\n      }\n    },\n    labelActive() {\n      return this.label;\n    },\n    showMaxLengthCounter() {\n      return this.typing && this.inputFocus && (this.maxlength && this.modelValue && !this.hideMaxlengthCounter);\n    },\n    showClearButton() {\n      return !this.typing && (this.modelComputed && this.clearable);\n    },\n    showInputRightSideArea() {\n      if (this.inputCategory === \"password\") {\n        return true;\n      } else {\n        return this.showMaxLengthCounter || this.showClearButton;\n      }\n    },\n    showInputLeftSideArea() {\n      return this.leftIcon;\n    },\n    inputCategory() {\n      if (this.type) {\n        if (inputTypes.includes(this.type)) {\n          return Object.keys(inputCategories).find((key) => {\n            return inputCategories[key].includes(this.type);\n          });\n        }\n      }\n      return null;\n    },\n    inputMessage() {\n      let messageData = {\n        key: null,\n        message: null,\n        color: null,\n        icon: null\n      };\n      if (this.showError.message || this.showError.highlight) {\n        messageData.key = this.showError.highlight ? \"error\" : null;\n        messageData.icon = this.showError.icon || \"error\";\n        messageData.message = this.showError.message;\n        messageData.color = colorUtilities.$error_color;\n      } else if (this.showWarning.message || this.showWarning.highlight) {\n        messageData.key = this.showWarning.highlight ? \"warning\" : null;\n        messageData.icon = this.showWarning.icon || \"warning\";\n        messageData.message = this.showWarning.message;\n        messageData.color = colorUtilities.$warning_color;\n      } else if (this.showSuccess.message || this.showSuccess.highlight) {\n        messageData.key = this.showSuccess.highlight ? \"success\" : null;\n        messageData.icon = this.showSuccess.icon || \"check_circle\";\n        messageData.message = this.showSuccess.message;\n        messageData.color = colorUtilities.$success_color_1;\n      } else if (this.showInfo.message || this.showInfo.highlight) {\n        messageData.key = this.showInfo.highlight ? \"info\" : null;\n        messageData.icon = this.showInfo.icon || \"info\";\n        messageData.message = this.showInfo.message;\n        messageData.color = colorUtilities.$black_color;\n      }\n      return messageData;\n    },\n    visibilityTrigger: {\n      set(val) {\n        this.passwordVisibilityTrigger = val;\n      },\n      get() {\n        return this.passwordVisibilityTrigger;\n      }\n    }\n  },\n  data() {\n    return {\n      inputTypes,\n      model: null,\n      readyForView: false,\n      inputFocus: false,\n      typing: false,\n      debounceId: null,\n      passwordVisibilityTrigger: false\n    };\n  },\n  mounted() {\n    const input = this.$refs[\"input-component\"];\n    if (input) {\n      if (this.modelValue) {\n        this.modelComputed = this.modelValue;\n      }\n      if (this.inputSize) {\n        input.style.width = this.inputSize.width;\n        input.style.height = this.inputSize.height;\n      }\n      if (this.midSize) {\n        input.style.width = \"100px\";\n        input.style.height = \"30px\";\n      }\n      if (this.style) {\n        Object.entries(this.style).forEach(([key, value]) => {\n          input.style[key] = value;\n        });\n      }\n    }\n    this.readyForView = true;\n  },\n  unmounted() {\n    this.readyForView = false;\n  },\n  watch: {\n    modelValue(val, oldVal) {\n      if (val !== oldVal && !this.disabled) {\n        this.modelComputed = this.modelValue;\n      }\n    },\n    readyForView(val) {\n      this.$emit(\"readyForView\", val);\n    }\n  },\n  methods: {\n    generateUniqueId,\n    clearAllButton() {\n      this.modelComputed = null;\n      const input = (void 0).getElementById(this.idComputed);\n      if (input) {\n        input.focus();\n      }\n    },\n    handleInputChange() {\n      this.typing = true;\n      this.customDebounce(function() {\n        this.typing = false;\n      })();\n    },\n    customDebounce(func, delay = 400) {\n      const self = this;\n      return function(...args) {\n        clearTimeout(self.debounceId);\n        self.debounceId = setTimeout(() => {\n          func.apply(self, args);\n        }, delay);\n      };\n    },\n    iconColorDetecter(main) {\n      if (this.focusComputed) {\n        return main ? main : colorUtilities.$black_color;\n      }\n      return colorUtilities.$black_color_4;\n    }\n  }\n});\n",
      "start": 1708867444098,
      "end": 1708867444980,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/vugarsafarzada/Desktop/Files/Develop/My Projects/e-commercial-app/nuxt-app/assets/scripts/components/inputComponent.js?vue&type=script&src=true&lang.js\"],\n  \"sourcesContent\": [\"import {defineComponent} from 'vue';\\nimport {\\n    developerAnnounce,\\n    generateUniqueId,\\n} from 'assets/scripts/helpers/generalHelpers.js';\\nimport {inputCategories, inputTypes} from \\\"assets/scripts/constants/inputConstants.js\\\";\\nimport colorUtilities from \\\"assets/scripts/constants/colorUtilities.js\\\";\\n\\n//#TODO: This components aren't Vue file. Be careful for it!\\nimport IconComponent from \\\"assets/scripts/components/iconComponent.js\\\";\\nimport LoadingComponent from \\\"assets/scripts/components/loadingComponent.js\\\";\\n\\nexport default defineComponent({\\n    name: \\\"InputComponent\\\",\\n    components: { IconComponent, LoadingComponent },\\n    emits: [\\n        'click',\\n        'inputFocus',\\n        'readyForView',\\n        'update:modelValue',\\n    ],\\n    props: {\\n        inputStyle: Object,\\n        style: Object,\\n        leftIcon: Object,\\n        id: [String, Number],\\n        required: Boolean,\\n        autofocus: Boolean,\\n        readonly: Boolean,\\n        autocomplete: String,\\n        disabled: Boolean,\\n        pattern: String,\\n        maxlength: [Number, String],\\n        value: [Number, String, Object, Boolean],\\n        label: String,\\n        htmlLabel: String,\\n        isLoading: Boolean,\\n        midSize: Boolean,\\n        type: {\\n            type: String,\\n            default: () => 'text'\\n        },\\n        name: {\\n            type: String,\\n            default: () => 'text'\\n        },\\n        placeholder: String,\\n        inputSize: {\\n            type: Object,\\n            default: () => {\\n                return {\\n                    width: '300px',\\n                    height: '50px'\\n                }\\n            }\\n        },\\n        modelValue: {\\n            default: () => null\\n        },\\n        clearable: {\\n            type: Boolean,\\n            default: () => false\\n        },\\n        hideMaxlengthCounter: {\\n            type: Boolean,\\n            default: () => false\\n        },\\n        buttonType: {\\n            type: String,\\n            default: () => '0'\\n        },\\n        showSuccess: {\\n            type: Object,\\n            default: () => {\\n                return {\\n                    message: null,\\n                    highlight: false,\\n                    icon: null\\n                }\\n            }\\n        },\\n        showInfo: {\\n            type: Object,\\n            default: () => {\\n                return {\\n                    message: null,\\n                    highlight: false,\\n                    icon: null\\n                }\\n            }\\n        },\\n        showWarning: {\\n            type: Object,\\n            default: () => {\\n                return {\\n                    message: null,\\n                    highlight: false,\\n                    icon: null\\n                }\\n            }\\n        },\\n        showError: {\\n            type: Object,\\n            default: () => {\\n                return {\\n                    message: null,\\n                    highlight: false,\\n                    icon: null\\n                }\\n            }\\n        },\\n    },\\n    computed: {\\n        colorUtilities() {\\n            return colorUtilities\\n        },\\n        idComputed(){\\n            if(!this.id){\\n                developerAnnounce('Input component required an id!');\\n                return this.generateUniqueId();\\n            }\\n            return this.id;\\n        },\\n        modelComputed:{\\n            set(val){\\n                if(!this.disabled){\\n                    this.model = val;\\n                    this.$emit('update:modelValue', val);\\n                }\\n            },\\n            get(){\\n                return this.model;\\n            }\\n        },\\n        focusComputed: {\\n            set(val){\\n                this.inputFocus = val;\\n                this.$emit('inputFocus', val);\\n            },\\n            get(){\\n                return this.inputFocus;\\n            }\\n        },\\n        labelActive(){\\n            return this.label;\\n        },\\n        showMaxLengthCounter(){\\n            return this.typing\\n                && this.inputFocus\\n                && (this.maxlength\\n                    && this.modelValue\\n                    && !this.hideMaxlengthCounter);\\n        },\\n        showClearButton(){\\n            return !this.typing && (this.modelComputed && this.clearable);\\n        },\\n        showInputRightSideArea(){\\n            if(this.inputCategory === 'password'){\\n                return true;\\n            } else {\\n                return this.showMaxLengthCounter || this.showClearButton;\\n            }\\n        },\\n        showInputLeftSideArea(){\\n            return this.leftIcon;\\n        },\\n        inputCategory() {\\n            if(this.type){\\n                if(inputTypes.includes(this.type)){\\n                    return Object.keys(inputCategories).find(key => {\\n                        return inputCategories[key].includes(this.type)\\n                    })\\n                }\\n            }\\n            return null;\\n        },\\n        inputMessage(){\\n            let messageData = {\\n                key: null,\\n                message: null,\\n                color: null,\\n                icon: null\\n            }\\n            if (this.showError.message || this.showError.highlight){\\n                messageData.key = this.showError.highlight ? 'error' : null;\\n                messageData.icon = this.showError.icon || 'error';\\n                messageData.message = this.showError.message;\\n                messageData.color = colorUtilities.$error_color;\\n            } else if (this.showWarning.message || this.showWarning.highlight){\\n                messageData.key = this.showWarning.highlight ? 'warning' : null;\\n                messageData.icon = this.showWarning.icon || 'warning';\\n                messageData.message = this.showWarning.message;\\n                messageData.color = colorUtilities.$warning_color\\n            } else if (this.showSuccess.message || this.showSuccess.highlight){\\n                messageData.key = this.showSuccess.highlight ? 'success' : null;\\n                messageData.icon = this.showSuccess.icon || 'check_circle';\\n                messageData.message = this.showSuccess.message;\\n                messageData.color = colorUtilities.$success_color_1;\\n            } else if (this.showInfo.message || this.showInfo.highlight){\\n                messageData.key = this.showInfo.highlight ? 'info' : null;\\n                messageData.icon = this.showInfo.icon || 'info';\\n                messageData.message = this.showInfo.message;\\n                messageData.color = colorUtilities.$black_color;\\n            }\\n            return messageData\\n        },\\n        visibilityTrigger: {\\n            set(val){\\n                this.passwordVisibilityTrigger = val;\\n            },\\n            get(){\\n                return this.passwordVisibilityTrigger;\\n            }\\n        }\\n    },\\n    data() {\\n        return {\\n            inputTypes,\\n            model: null,\\n            readyForView: false,\\n            inputFocus: false,\\n            typing: false,\\n            debounceId: null,\\n            passwordVisibilityTrigger: false\\n        }\\n    },\\n    mounted() {\\n        const input = this.$refs['input-component'];\\n        if(input){\\n            if(this.modelValue){\\n                this.modelComputed = this.modelValue;\\n            }\\n            if(this.inputSize){\\n                input.style.width = this.inputSize.width;\\n                input.style.height = this.inputSize.height;\\n            }\\n            if(this.midSize){\\n                input.style.width = 100 + 'px';\\n                input.style.height = 30 + 'px';\\n            }\\n            if(this.style){\\n                Object.entries(this.style).forEach(([key, value]) => {\\n                    input.style[key] = value;\\n                });\\n            }\\n        }\\n        this.readyForView = true;\\n    },\\n    unmounted() {\\n        this.readyForView = false;\\n    },\\n    watch: {\\n        modelValue(val, oldVal){\\n            if(val !== oldVal && !this.disabled){\\n                this.modelComputed = this.modelValue;\\n            }\\n        },\\n        readyForView(val) {\\n                this.$emit('readyForView', val)\\n        }\\n    },\\n    methods:{\\n        generateUniqueId,\\n        clearAllButton(){\\n            this.modelComputed = null;\\n            const input = document.getElementById(this.idComputed);\\n            if(input){\\n                input.focus();\\n            }\\n        },\\n        handleInputChange(){\\n            this.typing = true;\\n            this.customDebounce(function (){\\n                this.typing = false;\\n            })();\\n        },\\n        customDebounce(func, delay = 400) {\\n            const self = this\\n            return function(...args) {\\n                clearTimeout(self.debounceId);\\n                self.debounceId = setTimeout(() => {\\n                    func.apply(self, args);\\n                }, delay);\\n            };\\n        },\\n        iconColorDetecter(main) {\\n            if(this.focusComputed){\\n                return main ? main : colorUtilities.$black_color;\\n            }\\n            return colorUtilities.$black_color_4\\n        },\\n    }\\n});\"],\n  \"mappings\": \"AAAA,SAAQ,uBAAsB;AAC9B;AAAA,EACI;AAAA,EACA;AAAA,OACG;AACP,SAAQ,iBAAiB,kBAAiB;AAC1C,OAAO,oBAAoB;AAG3B,OAAO,mBAAmB;AAC1B,OAAO,sBAAsB;AAE7B,eAAe,gBAAgB;AAAA,EAC3B,MAAM;AAAA,EACN,YAAY,EAAE,eAAe,iBAAiB;AAAA,EAC9C,OAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AAAA,EACA,OAAO;AAAA,IACH,YAAY;AAAA,IACZ,OAAO;AAAA,IACP,UAAU;AAAA,IACV,IAAI,CAAC,QAAQ,MAAM;AAAA,IACnB,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,cAAc;AAAA,IACd,UAAU;AAAA,IACV,SAAS;AAAA,IACT,WAAW,CAAC,QAAQ,MAAM;AAAA,IAC1B,OAAO,CAAC,QAAQ,QAAQ,QAAQ,OAAO;AAAA,IACvC,OAAO;AAAA,IACP,WAAW;AAAA,IACX,WAAW;AAAA,IACX,SAAS;AAAA,IACT,MAAM;AAAA,MACF,MAAM;AAAA,MACN,SAAS,MAAM;AAAA,IACnB;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,SAAS,MAAM;AAAA,IACnB;AAAA,IACA,aAAa;AAAA,IACb,WAAW;AAAA,MACP,MAAM;AAAA,MACN,SAAS,MAAM;AACX,eAAO;AAAA,UACH,OAAO;AAAA,UACP,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,YAAY;AAAA,MACR,SAAS,MAAM;AAAA,IACnB;AAAA,IACA,WAAW;AAAA,MACP,MAAM;AAAA,MACN,SAAS,MAAM;AAAA,IACnB;AAAA,IACA,sBAAsB;AAAA,MAClB,MAAM;AAAA,MACN,SAAS,MAAM;AAAA,IACnB;AAAA,IACA,YAAY;AAAA,MACR,MAAM;AAAA,MACN,SAAS,MAAM;AAAA,IACnB;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,SAAS,MAAM;AACX,eAAO;AAAA,UACH,SAAS;AAAA,UACT,WAAW;AAAA,UACX,MAAM;AAAA,QACV;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,UAAU;AAAA,MACN,MAAM;AAAA,MACN,SAAS,MAAM;AACX,eAAO;AAAA,UACH,SAAS;AAAA,UACT,WAAW;AAAA,UACX,MAAM;AAAA,QACV;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,SAAS,MAAM;AACX,eAAO;AAAA,UACH,SAAS;AAAA,UACT,WAAW;AAAA,UACX,MAAM;AAAA,QACV;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,WAAW;AAAA,MACP,MAAM;AAAA,MACN,SAAS,MAAM;AACX,eAAO;AAAA,UACH,SAAS;AAAA,UACT,WAAW;AAAA,UACX,MAAM;AAAA,QACV;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,UAAU;AAAA,IACN,iBAAiB;AACb,aAAO;AAAA,IACX;AAAA,IACA,aAAY;AACR,UAAG,CAAC,KAAK,IAAG;AACR,0BAAkB,iCAAiC;AACnD,eAAO,KAAK,iBAAiB;AAAA,MACjC;AACA,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,eAAc;AAAA,MACV,IAAI,KAAI;AACJ,YAAG,CAAC,KAAK,UAAS;AACd,eAAK,QAAQ;AACb,eAAK,MAAM,qBAAqB,GAAG;AAAA,QACvC;AAAA,MACJ;AAAA,MACA,MAAK;AACD,eAAO,KAAK;AAAA,MAChB;AAAA,IACJ;AAAA,IACA,eAAe;AAAA,MACX,IAAI,KAAI;AACJ,aAAK,aAAa;AAClB,aAAK,MAAM,cAAc,GAAG;AAAA,MAChC;AAAA,MACA,MAAK;AACD,eAAO,KAAK;AAAA,MAChB;AAAA,IACJ;AAAA,IACA,cAAa;AACT,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,uBAAsB;AAClB,aAAO,KAAK,UACL,KAAK,eACJ,KAAK,aACF,KAAK,cACL,CAAC,KAAK;AAAA,IACrB;AAAA,IACA,kBAAiB;AACb,aAAO,CAAC,KAAK,WAAW,KAAK,iBAAiB,KAAK;AAAA,IACvD;AAAA,IACA,yBAAwB;AACpB,UAAG,KAAK,kBAAkB,YAAW;AACjC,eAAO;AAAA,MACX,OAAO;AACH,eAAO,KAAK,wBAAwB,KAAK;AAAA,MAC7C;AAAA,IACJ;AAAA,IACA,wBAAuB;AACnB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,gBAAgB;AACZ,UAAG,KAAK,MAAK;AACT,YAAG,WAAW,SAAS,KAAK,IAAI,GAAE;AAC9B,iBAAO,OAAO,KAAK,eAAe,EAAE,KAAK,SAAO;AAC5C,mBAAO,gBAAgB,GAAG,EAAE,SAAS,KAAK,IAAI;AAAA,UAClD,CAAC;AAAA,QACL;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IACA,eAAc;AACV,UAAI,cAAc;AAAA,QACd,KAAK;AAAA,QACL,SAAS;AAAA,QACT,OAAO;AAAA,QACP,MAAM;AAAA,MACV;AACA,UAAI,KAAK,UAAU,WAAW,KAAK,UAAU,WAAU;AACnD,oBAAY,MAAM,KAAK,UAAU,YAAY,UAAU;AACvD,oBAAY,OAAO,KAAK,UAAU,QAAQ;AAC1C,oBAAY,UAAU,KAAK,UAAU;AACrC,oBAAY,QAAQ,eAAe;AAAA,MACvC,WAAW,KAAK,YAAY,WAAW,KAAK,YAAY,WAAU;AAC9D,oBAAY,MAAM,KAAK,YAAY,YAAY,YAAY;AAC3D,oBAAY,OAAO,KAAK,YAAY,QAAQ;AAC5C,oBAAY,UAAU,KAAK,YAAY;AACvC,oBAAY,QAAQ,eAAe;AAAA,MACvC,WAAW,KAAK,YAAY,WAAW,KAAK,YAAY,WAAU;AAC9D,oBAAY,MAAM,KAAK,YAAY,YAAY,YAAY;AAC3D,oBAAY,OAAO,KAAK,YAAY,QAAQ;AAC5C,oBAAY,UAAU,KAAK,YAAY;AACvC,oBAAY,QAAQ,eAAe;AAAA,MACvC,WAAW,KAAK,SAAS,WAAW,KAAK,SAAS,WAAU;AACxD,oBAAY,MAAM,KAAK,SAAS,YAAY,SAAS;AACrD,oBAAY,OAAO,KAAK,SAAS,QAAQ;AACzC,oBAAY,UAAU,KAAK,SAAS;AACpC,oBAAY,QAAQ,eAAe;AAAA,MACvC;AACA,aAAO;AAAA,IACX;AAAA,IACA,mBAAmB;AAAA,MACf,IAAI,KAAI;AACJ,aAAK,4BAA4B;AAAA,MACrC;AAAA,MACA,MAAK;AACD,eAAO,KAAK;AAAA,MAChB;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO;AACH,WAAO;AAAA,MACH;AAAA,MACA,OAAO;AAAA,MACP,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,2BAA2B;AAAA,IAC/B;AAAA,EACJ;AAAA,EACA,UAAU;AACN,UAAM,QAAQ,KAAK,MAAM,iBAAiB;AAC1C,QAAG,OAAM;AACL,UAAG,KAAK,YAAW;AACf,aAAK,gBAAgB,KAAK;AAAA,MAC9B;AACA,UAAG,KAAK,WAAU;AACd,cAAM,MAAM,QAAQ,KAAK,UAAU;AACnC,cAAM,MAAM,SAAS,KAAK,UAAU;AAAA,MACxC;AACA,UAAG,KAAK,SAAQ;AACZ,cAAM,MAAM,QAAQ;AACpB,cAAM,MAAM,SAAS;AAAA,MACzB;AACA,UAAG,KAAK,OAAM;AACV,eAAO,QAAQ,KAAK,KAAK,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AACjD,gBAAM,MAAM,GAAG,IAAI;AAAA,QACvB,CAAC;AAAA,MACL;AAAA,IACJ;AACA,SAAK,eAAe;AAAA,EACxB;AAAA,EACA,YAAY;AACR,SAAK,eAAe;AAAA,EACxB;AAAA,EACA,OAAO;AAAA,IACH,WAAW,KAAK,QAAO;AACnB,UAAG,QAAQ,UAAU,CAAC,KAAK,UAAS;AAChC,aAAK,gBAAgB,KAAK;AAAA,MAC9B;AAAA,IACJ;AAAA,IACA,aAAa,KAAK;AACV,WAAK,MAAM,gBAAgB,GAAG;AAAA,IACtC;AAAA,EACJ;AAAA,EACA,SAAQ;AAAA,IACJ;AAAA,IACA,iBAAgB;AACZ,WAAK,gBAAgB;AACrB,YAAM,QAAQ,SAAS,eAAe,KAAK,UAAU;AACrD,UAAG,OAAM;AACL,cAAM,MAAM;AAAA,MAChB;AAAA,IACJ;AAAA,IACA,oBAAmB;AACf,WAAK,SAAS;AACd,WAAK,eAAe,WAAW;AAC3B,aAAK,SAAS;AAAA,MAClB,CAAC,EAAE;AAAA,IACP;AAAA,IACA,eAAe,MAAM,QAAQ,KAAK;AAC9B,YAAM,OAAO;AACb,aAAO,YAAY,MAAM;AACrB,qBAAa,KAAK,UAAU;AAC5B,aAAK,aAAa,WAAW,MAAM;AAC/B,eAAK,MAAM,MAAM,IAAI;AAAA,QACzB,GAAG,KAAK;AAAA,MACZ;AAAA,IACJ;AAAA,IACA,kBAAkB,MAAM;AACpB,UAAG,KAAK,eAAc;AAClB,eAAO,OAAO,OAAO,eAAe;AAAA,MACxC;AACA,aAAO,eAAe;AAAA,IAC1B;AAAA,EACJ;AACJ,CAAC;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1708867444980,
      "end": 1708867444980,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708867444980,
      "end": 1708867444980,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708867444980,
      "end": 1708867444980,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708867444980,
      "end": 1708867444980,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708867444980,
      "end": 1708867444980,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708867444980,
      "end": 1708867444980,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708867444980,
      "end": 1708867444980,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708867444980,
      "end": 1708867444980,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708867444980,
      "end": 1708867444980,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708867444980,
      "end": 1708867444982,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708867444980,
      "end": 1708867444982,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708867444982,
      "end": 1708867444982,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708867444982,
      "end": 1708867444982,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708867444982,
      "end": 1708867444982,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708867444982,
      "end": 1708867444982,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1708867444982,
      "end": 1708867444982,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708867444982,
      "end": 1708867444982,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708867444982,
      "end": 1708867444982,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708867444982,
      "end": 1708867444982,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708867444982,
      "end": 1708867444982,
      "order": "normal"
    }
  ]
}
