{
  "resolvedId": "/Users/vugarsafarzada/Desktop/Files/Develop/My Projects/e-commercial-app/nuxt-app/components/views/logIn.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <div id=\"log-in-page\" class=\"flex-column-center\" v-show=\"readyForView\">\n    <form class=\"log-in-form\" @submit.prevent=\"submit\">\n      <div class=\"message-box\">\n        <message-component\n            v-if=\"!showEmailInputError && loginProgressStatus === false\"\n            type=\"error\"\n            :message=\"backendMessage(loginResponse.message)\"/>\n        <message-component\n            v-else\n            hide-icon\n            type=\"info\"\n            :message=\"$t('get_started.log_in.welcome_message')\" />\n      </div>\n      <div class=\"input-group\">\n        <input-component\n            id=\"email-input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"example@domain.com\"\n            v-model=\"modelLogin.email\"\n            autocomplete=\"email\"\n            :label=\"$t('get_started.log_in.email')\"\n            :left-icon=\"{ icon: 'alternate_email', size: '2.5rem' }\"\n            :input-size=\"{\n              width: '100%',\n              height: '4rem'\n            }\"\n            :show-error=\"{\n              message: showEmailInputError,\n              highlight: !!showEmailInputError\n            }\"\n            required\n            clearable />\n        <br>\n        <input-component\n            id=\"password-input\"\n            type=\"password\"\n            name=\"password\"\n            autocomplete=\"current-password\"\n            v-model=\"modelLogin.password\"\n            :label=\"$t('get_started.log_in.password')\"\n            :left-icon=\"{ icon: 'lock', size: '2.5rem' }\"\n            :input-size=\"{\n              width: '100%',\n              height: '4rem'\n            }\"\n            required\n            clearable />\n        <div class=\"forget-password-area\">\n          <nuxt-link to=\"/forgot_password\" class=\"decoration\">\n            {{ $t('get_started.log_in.forget_password') }}\n          </nuxt-link>\n        </div>\n      </div>\n      <input-component\n          id=\"submit-btn\"\n          type=\"submit\"\n          :label=\"$t('get_started.log_in.submit_btn')\"\n          @ready-for-view=\"setReadyForView\"\n          :left-icon=\"{ icon: 'lock' }\"\n          :input-size=\"{\n            width: '100%',\n            height: '3.5rem'\n          }\"\n          :is-loading=\"submitIsLoading\"\n          :disabled=\"!readyForSubmit\" />\n    </form>\n    <span class=\"no-account-yet\">\n      {{ $t('get_started.log_in.no_account_yet') }}\n      <nuxt-link to=\"?view=sign_up\" class=\"decoration\">\n        {{ $t('get_started.log_in.sign_up') }}\n      </nuxt-link>\n      {{ $t('get_started.log_in.now').toLowerCase() }}!\n    </span>\n    <br>\n  </div>\n</template>\n\n<script lang=\"js\">\nimport { defineComponent } from 'vue';\nimport { useAuthStore } from \"~/stores/user/auth\";\nimport { defaults } from \"~/assets/scripts/types/models/userAuthModels\"\nimport { backendMessage } from \"~/assets/scripts/helpers/generalHelpers\";\nimport messages from \"~/assets/scripts/constants/apiMessageKeys\";\n\nconst loginResponse = defaults.defaultResponses.login();\n\nexport default defineComponent({\n  name: \"LogIn\",\n  computed: {\n    readyForSubmit() {\n      let ready = false;\n      let { password, email } = this.modelLogin;\n      if (password && email) {\n        ready = true\n      }\n      return ready;\n    },\n    modelLogin() {\n      const { modelLogin } = useAuthStore();\n      return modelLogin;\n    },\n    loginProgressStatus() {\n      return this.loginResponse.success;\n    },\n    showEmailInputError(){\n      let error = null;\n      if (this.loginProgressStatus === false &&\n          this.loginResponse.message === this.messages.INVALID_EMAIL) {\n          error = this.backendMessage(this.messages.INVALID_EMAIL);\n      }\n      return error;\n    }\n  },\n  data: () => {\n    return {\n      readyForView: false,\n      submitIsLoading: false,\n      loginResponse,\n      messages,\n    }\n  },\n  unmounted() {\n    this.resetModel();\n  },\n  methods: {\n    backendMessage,\n    async submit() {\n      this.submitIsLoading = true;\n      const { submitLogin, authUser, afterAuthPath } = useAuthStore();\n      await submitLogin()\n        .then(async (response) => {\n          this.loginResponse = { ... response };\n          if(this.loginResponse.success){\n            // Getting auth user\n            await authUser()\n                .then(() => this.$router.push(afterAuthPath))\n                .finally(() => this.submitIsLoading = false);\n          }\n        })\n        .catch(error => {\n          this.loginResponse = { ...error };\n        })\n        .finally(() => {\n          this.submitIsLoading = false;\n        });\n    },\n    resetModel() {\n      const { resetModelLogin } = useAuthStore();\n      resetModelLogin();\n    },\n    setReadyForView(val) {\n      this.readyForView = val;\n    }\n  },\n  watch: {\n    modelLogin: {\n      handler(val) {\n        this.loginResponse = loginResponse;\n        Object.keys(this.modelLogin).forEach(key => {\n          this.modelLogin[key] = this.modelLogin[key]?.trim();\n        });\n      },\n      deep: true\n    }\n  }\n});\n</script>\n\n<style scoped lang=\"scss\">\n#log-in-page {\n  form.log-in-form {\n    width: 70%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 2rem;\n    margin: 2.5rem 0;\n\n    .input-group {\n      display: flex;\n      flex-direction: column;\n      gap: .4rem;\n      width: 100%;\n\n      .forget-password-area {\n        width: 100%;\n        text-align: right;\n        margin-top: .5rem;\n        a {\n          font-size: 1rem;\n          color: $black_color_6;\n        }\n      }\n    }\n\n    .message-box {\n      margin-bottom: 1rem;\n    }\n  }\n\n  .no-account-yet {\n    font-size: 1.1rem;\n    color: $black_color;\n  }\n}\n</style>",
      "start": 1708870618851,
      "end": 1708870619000,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708870619000,
      "end": 1708870619000,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708870619000,
      "end": 1708870619000,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708870619000,
      "end": 1708870619000,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708870619000,
      "end": 1708870619000,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708870619000,
      "end": 1708870619000,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708870619000,
      "end": 1708870619000,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708870619000,
      "end": 1708870619000,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport { defineComponent } from 'vue';\nimport { useAuthStore } from \"~/stores/user/auth\";\nimport { defaults } from \"~/assets/scripts/types/models/userAuthModels\"\nimport { backendMessage } from \"~/assets/scripts/helpers/generalHelpers\";\nimport messages from \"~/assets/scripts/constants/apiMessageKeys\";\n\nconst loginResponse = defaults.defaultResponses.login();\n\nconst _sfc_main = defineComponent({\n  name: \"LogIn\",\n  computed: {\n    readyForSubmit() {\n      let ready = false;\n      let { password, email } = this.modelLogin;\n      if (password && email) {\n        ready = true\n      }\n      return ready;\n    },\n    modelLogin() {\n      const { modelLogin } = useAuthStore();\n      return modelLogin;\n    },\n    loginProgressStatus() {\n      return this.loginResponse.success;\n    },\n    showEmailInputError(){\n      let error = null;\n      if (this.loginProgressStatus === false &&\n          this.loginResponse.message === this.messages.INVALID_EMAIL) {\n          error = this.backendMessage(this.messages.INVALID_EMAIL);\n      }\n      return error;\n    }\n  },\n  data: () => {\n    return {\n      readyForView: false,\n      submitIsLoading: false,\n      loginResponse,\n      messages,\n    }\n  },\n  unmounted() {\n    this.resetModel();\n  },\n  methods: {\n    backendMessage,\n    async submit() {\n      this.submitIsLoading = true;\n      const { submitLogin, authUser, afterAuthPath } = useAuthStore();\n      await submitLogin()\n        .then(async (response) => {\n          this.loginResponse = { ... response };\n          if(this.loginResponse.success){\n            // Getting auth user\n            await authUser()\n                .then(() => this.$router.push(afterAuthPath))\n                .finally(() => this.submitIsLoading = false);\n          }\n        })\n        .catch(error => {\n          this.loginResponse = { ...error };\n        })\n        .finally(() => {\n          this.submitIsLoading = false;\n        });\n    },\n    resetModel() {\n      const { resetModelLogin } = useAuthStore();\n      resetModelLogin();\n    },\n    setReadyForView(val) {\n      this.readyForView = val;\n    }\n  },\n  watch: {\n    modelLogin: {\n      handler(val) {\n        this.loginResponse = loginResponse;\n        Object.keys(this.modelLogin).forEach(key => {\n          this.modelLogin[key] = this.modelLogin[key]?.trim();\n        });\n      },\n      deep: true\n    }\n  }\n});\n\nimport { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers, vShow as _vShow, withDirectives as _withDirectives, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-c175a761\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  id: \"log-in-page\",\n  class: \"flex-column-center\"\n}\nconst _hoisted_2 = { class: \"message-box\" }\nconst _hoisted_3 = { class: \"input-group\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_5 = { class: \"forget-password-area\" }\nconst _hoisted_6 = { class: \"no-account-yet\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_message_component = _resolveComponent(\"message-component\")\n  const _component_input_component = _resolveComponent(\"input-component\")\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")\n\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"form\", {\n      class: \"log-in-form\",\n      onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => (_ctx.submit && _ctx.submit(...args)), [\"prevent\"]))\n    }, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        (!_ctx.showEmailInputError && _ctx.loginProgressStatus === false)\n          ? (_openBlock(), _createBlock(_component_message_component, {\n              key: 0,\n              type: \"error\",\n              message: _ctx.backendMessage(_ctx.loginResponse.message)\n            }, null, 8, [\"message\"]))\n          : (_openBlock(), _createBlock(_component_message_component, {\n              key: 1,\n              \"hide-icon\": \"\",\n              type: \"info\",\n              message: _ctx.$t('get_started.log_in.welcome_message')\n            }, null, 8, [\"message\"]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createVNode(_component_input_component, {\n          id: \"email-input\",\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"example@domain.com\",\n          modelValue: _ctx.modelLogin.email,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => ((_ctx.modelLogin.email) = $event)),\n          autocomplete: \"email\",\n          label: _ctx.$t('get_started.log_in.email'),\n          \"left-icon\": { icon: 'alternate_email', size: '2.5rem' },\n          \"input-size\": {\n              width: '100%',\n              height: '4rem'\n            },\n          \"show-error\": {\n              message: _ctx.showEmailInputError,\n              highlight: !!_ctx.showEmailInputError\n            },\n          required: \"\",\n          clearable: \"\"\n        }, null, 8, [\"modelValue\", \"label\", \"show-error\"]),\n        _hoisted_4,\n        _createVNode(_component_input_component, {\n          id: \"password-input\",\n          type: \"password\",\n          name: \"password\",\n          autocomplete: \"current-password\",\n          modelValue: _ctx.modelLogin.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => ((_ctx.modelLogin.password) = $event)),\n          label: _ctx.$t('get_started.log_in.password'),\n          \"left-icon\": { icon: 'lock', size: '2.5rem' },\n          \"input-size\": {\n              width: '100%',\n              height: '4rem'\n            },\n          required: \"\",\n          clearable: \"\"\n        }, null, 8, [\"modelValue\", \"label\"]),\n        _createElementVNode(\"div\", _hoisted_5, [\n          _createVNode(_component_nuxt_link, {\n            to: \"/forgot_password\",\n            class: \"decoration\"\n          }, {\n            default: _withCtx(() => [\n              _createTextVNode(_toDisplayString(_ctx.$t('get_started.log_in.forget_password')), 1)\n            ]),\n            _: 1\n          })\n        ])\n      ]),\n      _createVNode(_component_input_component, {\n        id: \"submit-btn\",\n        type: \"submit\",\n        label: _ctx.$t('get_started.log_in.submit_btn'),\n        onReadyForView: _ctx.setReadyForView,\n        \"left-icon\": { icon: 'lock' },\n        \"input-size\": {\n            width: '100%',\n            height: '3.5rem'\n          },\n        \"is-loading\": _ctx.submitIsLoading,\n        disabled: !_ctx.readyForSubmit\n      }, null, 8, [\"label\", \"onReadyForView\", \"is-loading\", \"disabled\"])\n    ], 32),\n    _createElementVNode(\"span\", _hoisted_6, [\n      _createTextVNode(_toDisplayString(_ctx.$t('get_started.log_in.no_account_yet')) + \" \", 1),\n      _createVNode(_component_nuxt_link, {\n        to: \"?view=sign_up\",\n        class: \"decoration\"\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(_toDisplayString(_ctx.$t('get_started.log_in.sign_up')), 1)\n        ]),\n        _: 1\n      }),\n      _createTextVNode(\" \" + _toDisplayString(_ctx.$t('get_started.log_in.now').toLowerCase()) + \"! \", 1)\n    ]),\n    _hoisted_7\n  ], 512)), [\n    [_vShow, _ctx.readyForView]\n  ])\n}\n\nimport \"/Users/vugarsafarzada/Desktop/Files/Develop/My Projects/e-commercial-app/nuxt-app/components/views/logIn.vue?vue&type=style&index=0&scoped=c175a761&lang.scss\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render],['__scopeId',\"data-v-c175a761\"]])",
      "start": 1708870619000,
      "end": 1708870619007,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708870619007,
      "end": 1708870619007,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708870619007,
      "end": 1708870619008,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708870619008,
      "end": 1708870619008,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708870619008,
      "end": 1708870619008,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708870619008,
      "end": 1708870619008,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708870619008,
      "end": 1708870619008,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708870619008,
      "end": 1708870619008,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708870619008,
      "end": 1708870619008,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708870619008,
      "end": 1708870619008,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708870619008,
      "end": 1708870619008,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708870619008,
      "end": 1708870619008,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708870619008,
      "end": 1708870619008,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708870619008,
      "end": 1708870619008,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708870619008,
      "end": 1708870619008,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708870619008,
      "end": 1708870619008,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708870619008,
      "end": 1708870619008,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708870619008,
      "end": 1708870619010,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708870619010,
      "end": 1708870619010,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708870619010,
      "end": 1708870619010,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708870619010,
      "end": 1708870619010,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708870619010,
      "end": 1708870619010,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/Users/vugarsafarzada/Desktop/Files/Develop/My Projects/e-commercial-app/nuxt-app/components/MessageComponent.vue\";\nimport { default as __nuxt_component_1 } from \"/Users/vugarsafarzada/Desktop/Files/Develop/My Projects/e-commercial-app/nuxt-app/components/InputComponent.vue\";\nimport { default as __nuxt_component_2 } from \"/Users/vugarsafarzada/Desktop/Files/Develop/My Projects/e-commercial-app/nuxt-app/node_modules/nuxt/dist/app/components/nuxt-link\";\n\nimport { defineComponent } from 'vue';\nimport { useAuthStore } from \"~/stores/user/auth\";\nimport { defaults } from \"~/assets/scripts/types/models/userAuthModels\"\nimport { backendMessage } from \"~/assets/scripts/helpers/generalHelpers\";\nimport messages from \"~/assets/scripts/constants/apiMessageKeys\";\n\nconst loginResponse = defaults.defaultResponses.login();\n\nconst _sfc_main = defineComponent({\n  name: \"LogIn\",\n  computed: {\n    readyForSubmit() {\n      let ready = false;\n      let { password, email } = this.modelLogin;\n      if (password && email) {\n        ready = true\n      }\n      return ready;\n    },\n    modelLogin() {\n      const { modelLogin } = useAuthStore();\n      return modelLogin;\n    },\n    loginProgressStatus() {\n      return this.loginResponse.success;\n    },\n    showEmailInputError(){\n      let error = null;\n      if (this.loginProgressStatus === false &&\n          this.loginResponse.message === this.messages.INVALID_EMAIL) {\n          error = this.backendMessage(this.messages.INVALID_EMAIL);\n      }\n      return error;\n    }\n  },\n  data: () => {\n    return {\n      readyForView: false,\n      submitIsLoading: false,\n      loginResponse,\n      messages,\n    }\n  },\n  unmounted() {\n    this.resetModel();\n  },\n  methods: {\n    backendMessage,\n    async submit() {\n      this.submitIsLoading = true;\n      const { submitLogin, authUser, afterAuthPath } = useAuthStore();\n      await submitLogin()\n        .then(async (response) => {\n          this.loginResponse = { ... response };\n          if(this.loginResponse.success){\n            // Getting auth user\n            await authUser()\n                .then(() => this.$router.push(afterAuthPath))\n                .finally(() => this.submitIsLoading = false);\n          }\n        })\n        .catch(error => {\n          this.loginResponse = { ...error };\n        })\n        .finally(() => {\n          this.submitIsLoading = false;\n        });\n    },\n    resetModel() {\n      const { resetModelLogin } = useAuthStore();\n      resetModelLogin();\n    },\n    setReadyForView(val) {\n      this.readyForView = val;\n    }\n  },\n  watch: {\n    modelLogin: {\n      handler(val) {\n        this.loginResponse = loginResponse;\n        Object.keys(this.modelLogin).forEach(key => {\n          this.modelLogin[key] = this.modelLogin[key]?.trim();\n        });\n      },\n      deep: true\n    }\n  }\n});\n\nimport { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers, vShow as _vShow, withDirectives as _withDirectives, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-c175a761\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  id: \"log-in-page\",\n  class: \"flex-column-center\"\n}\nconst _hoisted_2 = { class: \"message-box\" }\nconst _hoisted_3 = { class: \"input-group\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_5 = { class: \"forget-password-area\" }\nconst _hoisted_6 = { class: \"no-account-yet\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_message_component = __nuxt_component_0\n  const _component_input_component = __nuxt_component_1\n  const _component_nuxt_link = __nuxt_component_2\n\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"form\", {\n      class: \"log-in-form\",\n      onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => (_ctx.submit && _ctx.submit(...args)), [\"prevent\"]))\n    }, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        (!_ctx.showEmailInputError && _ctx.loginProgressStatus === false)\n          ? (_openBlock(), _createBlock(_component_message_component, {\n              key: 0,\n              type: \"error\",\n              message: _ctx.backendMessage(_ctx.loginResponse.message)\n            }, null, 8, [\"message\"]))\n          : (_openBlock(), _createBlock(_component_message_component, {\n              key: 1,\n              \"hide-icon\": \"\",\n              type: \"info\",\n              message: _ctx.$t('get_started.log_in.welcome_message')\n            }, null, 8, [\"message\"]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createVNode(_component_input_component, {\n          id: \"email-input\",\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"example@domain.com\",\n          modelValue: _ctx.modelLogin.email,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => ((_ctx.modelLogin.email) = $event)),\n          autocomplete: \"email\",\n          label: _ctx.$t('get_started.log_in.email'),\n          \"left-icon\": { icon: 'alternate_email', size: '2.5rem' },\n          \"input-size\": {\n              width: '100%',\n              height: '4rem'\n            },\n          \"show-error\": {\n              message: _ctx.showEmailInputError,\n              highlight: !!_ctx.showEmailInputError\n            },\n          required: \"\",\n          clearable: \"\"\n        }, null, 8, [\"modelValue\", \"label\", \"show-error\"]),\n        _hoisted_4,\n        _createVNode(_component_input_component, {\n          id: \"password-input\",\n          type: \"password\",\n          name: \"password\",\n          autocomplete: \"current-password\",\n          modelValue: _ctx.modelLogin.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => ((_ctx.modelLogin.password) = $event)),\n          label: _ctx.$t('get_started.log_in.password'),\n          \"left-icon\": { icon: 'lock', size: '2.5rem' },\n          \"input-size\": {\n              width: '100%',\n              height: '4rem'\n            },\n          required: \"\",\n          clearable: \"\"\n        }, null, 8, [\"modelValue\", \"label\"]),\n        _createElementVNode(\"div\", _hoisted_5, [\n          _createVNode(_component_nuxt_link, {\n            to: \"/forgot_password\",\n            class: \"decoration\"\n          }, {\n            default: _withCtx(() => [\n              _createTextVNode(_toDisplayString(_ctx.$t('get_started.log_in.forget_password')), 1)\n            ]),\n            _: 1\n          })\n        ])\n      ]),\n      _createVNode(_component_input_component, {\n        id: \"submit-btn\",\n        type: \"submit\",\n        label: _ctx.$t('get_started.log_in.submit_btn'),\n        onReadyForView: _ctx.setReadyForView,\n        \"left-icon\": { icon: 'lock' },\n        \"input-size\": {\n            width: '100%',\n            height: '3.5rem'\n          },\n        \"is-loading\": _ctx.submitIsLoading,\n        disabled: !_ctx.readyForSubmit\n      }, null, 8, [\"label\", \"onReadyForView\", \"is-loading\", \"disabled\"])\n    ], 32),\n    _createElementVNode(\"span\", _hoisted_6, [\n      _createTextVNode(_toDisplayString(_ctx.$t('get_started.log_in.no_account_yet')) + \" \", 1),\n      _createVNode(_component_nuxt_link, {\n        to: \"?view=sign_up\",\n        class: \"decoration\"\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(_toDisplayString(_ctx.$t('get_started.log_in.sign_up')), 1)\n        ]),\n        _: 1\n      }),\n      _createTextVNode(\" \" + _toDisplayString(_ctx.$t('get_started.log_in.now').toLowerCase()) + \"! \", 1)\n    ]),\n    _hoisted_7\n  ], 512)), [\n    [_vShow, _ctx.readyForView]\n  ])\n}\n\nimport \"/Users/vugarsafarzada/Desktop/Files/Develop/My Projects/e-commercial-app/nuxt-app/components/views/logIn.vue?vue&type=style&index=0&scoped=c175a761&lang.scss\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render],['__scopeId',\"data-v-c175a761\"]])",
      "start": 1708870619010,
      "end": 1708870619010,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708870619010,
      "end": 1708870619010,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708870619010,
      "end": 1708870619010,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708870619010,
      "end": 1708870619010,
      "order": "normal"
    }
  ]
}
