{
  "resolvedId": "/Users/vugarsafarzada/Desktop/Files/Develop/My Projects/e-commercial-app/nuxt-app/middleware/auth.global.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import routeConfig from \"~/assets/scripts/configs/routeConfig\";\nimport { useAuthStore } from \"~/stores/user/auth\";\n\nexport default defineNuxtRouteMiddleware(async (to, from) => {\n    const { path } = to;\n    const fromPath = from.path;\n    if (process.client) {\n        const config = routeConfig[path];\n        let {\n            isAuthenticated,\n            authUser,\n            syncTokensFromLocalStorage,\n            setAuthProgressIsLoading,\n            setAfterAuthPath\n        } = useAuthStore();\n        syncTokensFromLocalStorage()\n        const access_token = localStorage.getItem('access_token');\n\n        if (path) {\n            let auth;\n            if (access_token && !isAuthenticated) {\n                setAuthProgressIsLoading(true);\n                auth = await authUser();\n            } else {\n                setAuthProgressIsLoading(false);\n            }\n            if (config?.auth && !isAuthenticated) {\n                if (path !== fromPath) {\n                    setAfterAuthPath(path);\n                }\n                if (!access_token) {\n                    return '/getstarted'\n                }\n                if (auth && !auth.user_id) {\n                    return '/getstarted'\n                }\n            } else if(path === '/getstarted' && access_token) {\n                return '/';\n            }\n        }\n    }\n});",
      "start": 1708870618515,
      "end": 1708870618631,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708870618631,
      "end": 1708870618631,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708870618631,
      "end": 1708870618631,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708870618631,
      "end": 1708870618631,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708870618631,
      "end": 1708870618631,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import routeConfig from \"~/assets/scripts/configs/routeConfig\";\nimport { useAuthStore } from \"~/stores/user/auth\";\nexport default defineNuxtRouteMiddleware(async (to, from) => {\n  const { path } = to;\n  const fromPath = from.path;\n  if (process.client) {\n    const config = routeConfig[path];\n    let {\n      isAuthenticated,\n      authUser,\n      syncTokensFromLocalStorage,\n      setAuthProgressIsLoading,\n      setAfterAuthPath\n    } = useAuthStore();\n    syncTokensFromLocalStorage();\n    const access_token = localStorage.getItem(\"access_token\");\n    if (path) {\n      let auth;\n      if (access_token && !isAuthenticated) {\n        setAuthProgressIsLoading(true);\n        auth = await authUser();\n      } else {\n        setAuthProgressIsLoading(false);\n      }\n      if (config?.auth && !isAuthenticated) {\n        if (path !== fromPath) {\n          setAfterAuthPath(path);\n        }\n        if (!access_token) {\n          return \"/getstarted\";\n        }\n        if (auth && !auth.user_id) {\n          return \"/getstarted\";\n        }\n      } else if (path === \"/getstarted\" && access_token) {\n        return \"/\";\n      }\n    }\n  }\n});\n",
      "start": 1708870618631,
      "end": 1708870618871,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/vugarsafarzada/Desktop/Files/Develop/My Projects/e-commercial-app/nuxt-app/middleware/auth.global.ts"
        ],
        "sourcesContent": [
          "import routeConfig from \"~/assets/scripts/configs/routeConfig\";\nimport { useAuthStore } from \"~/stores/user/auth\";\n\nexport default defineNuxtRouteMiddleware(async (to, from) => {\n    const { path } = to;\n    const fromPath = from.path;\n    if (process.client) {\n        const config = routeConfig[path];\n        let {\n            isAuthenticated,\n            authUser,\n            syncTokensFromLocalStorage,\n            setAuthProgressIsLoading,\n            setAfterAuthPath\n        } = useAuthStore();\n        syncTokensFromLocalStorage()\n        const access_token = localStorage.getItem('access_token');\n\n        if (path) {\n            let auth;\n            if (access_token && !isAuthenticated) {\n                setAuthProgressIsLoading(true);\n                auth = await authUser();\n            } else {\n                setAuthProgressIsLoading(false);\n            }\n            if (config?.auth && !isAuthenticated) {\n                if (path !== fromPath) {\n                    setAfterAuthPath(path);\n                }\n                if (!access_token) {\n                    return '/getstarted'\n                }\n                if (auth && !auth.user_id) {\n                    return '/getstarted'\n                }\n            } else if(path === '/getstarted' && access_token) {\n                return '/';\n            }\n        }\n    }\n});"
        ],
        "mappings": "AAAA,OAAO,iBAAiB;AACxB,SAAS,oBAAoB;AAE7B,eAAe,0BAA0B,OAAO,IAAI,SAAS;AACzD,QAAM,EAAE,KAAK,IAAI;AACjB,QAAM,WAAW,KAAK;AACtB,MAAI,QAAQ,QAAQ;AAChB,UAAM,SAAS,YAAY,IAAI;AAC/B,QAAI;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,IAAI,aAAa;AACjB,+BAA2B;AAC3B,UAAM,eAAe,aAAa,QAAQ,cAAc;AAExD,QAAI,MAAM;AACN,UAAI;AACJ,UAAI,gBAAgB,CAAC,iBAAiB;AAClC,iCAAyB,IAAI;AAC7B,eAAO,MAAM,SAAS;AAAA,MAC1B,OAAO;AACH,iCAAyB,KAAK;AAAA,MAClC;AACA,UAAI,QAAQ,QAAQ,CAAC,iBAAiB;AAClC,YAAI,SAAS,UAAU;AACnB,2BAAiB,IAAI;AAAA,QACzB;AACA,YAAI,CAAC,cAAc;AACf,iBAAO;AAAA,QACX;AACA,YAAI,QAAQ,CAAC,KAAK,SAAS;AACvB,iBAAO;AAAA,QACX;AAAA,MACJ,WAAU,SAAS,iBAAiB,cAAc;AAC9C,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AACJ,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1708870618871,
      "end": 1708870618871,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708870618871,
      "end": 1708870618871,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708870618871,
      "end": 1708870618871,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708870618871,
      "end": 1708870618871,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708870618871,
      "end": 1708870618871,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708870618871,
      "end": 1708870618871,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708870618871,
      "end": 1708870618871,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708870618871,
      "end": 1708870618871,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708870618871,
      "end": 1708870618871,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708870618871,
      "end": 1708870618871,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import routeConfig from \"~/assets/scripts/configs/routeConfig\";\nimport { useAuthStore } from \"~/stores/user/auth\";\nexport default defineNuxtRouteMiddleware(async (to, from) => {\n  const { path } = to;\n  const fromPath = from.path;\n  if (true) {\n    const config = routeConfig[path];\n    let {\n      isAuthenticated,\n      authUser,\n      syncTokensFromLocalStorage,\n      setAuthProgressIsLoading,\n      setAfterAuthPath\n    } = useAuthStore();\n    syncTokensFromLocalStorage();\n    const access_token = localStorage.getItem(\"access_token\");\n    if (path) {\n      let auth;\n      if (access_token && !isAuthenticated) {\n        setAuthProgressIsLoading(true);\n        auth = await authUser();\n      } else {\n        setAuthProgressIsLoading(false);\n      }\n      if (config?.auth && !isAuthenticated) {\n        if (path !== fromPath) {\n          setAfterAuthPath(path);\n        }\n        if (!access_token) {\n          return \"/getstarted\";\n        }\n        if (auth && !auth.user_id) {\n          return \"/getstarted\";\n        }\n      } else if (path === \"/getstarted\" && access_token) {\n        return \"/\";\n      }\n    }\n  }\n});\n",
      "start": 1708870618871,
      "end": 1708870619991,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1708870619991,
      "end": 1708870619991,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708870619991,
      "end": 1708870619991,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708870619992,
      "end": 1708870619992,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708870619992,
      "end": 1708870619992,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708870619992,
      "end": 1708870619992,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708870619992,
      "end": 1708870619992,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708870619992,
      "end": 1708870619992,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708870619992,
      "end": 1708870619992,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { defineNuxtRouteMiddleware } from '#app/composables/router';\nimport routeConfig from \"~/assets/scripts/configs/routeConfig\";\nimport { useAuthStore } from \"~/stores/user/auth\";\nexport default defineNuxtRouteMiddleware(async (to, from) => {\n  const { path } = to;\n  const fromPath = from.path;\n  if (true) {\n    const config = routeConfig[path];\n    let {\n      isAuthenticated,\n      authUser,\n      syncTokensFromLocalStorage,\n      setAuthProgressIsLoading,\n      setAfterAuthPath\n    } = useAuthStore();\n    syncTokensFromLocalStorage();\n    const access_token = localStorage.getItem(\"access_token\");\n    if (path) {\n      let auth;\n      if (access_token && !isAuthenticated) {\n        setAuthProgressIsLoading(true);\n        auth = await authUser();\n      } else {\n        setAuthProgressIsLoading(false);\n      }\n      if (config?.auth && !isAuthenticated) {\n        if (path !== fromPath) {\n          setAfterAuthPath(path);\n        }\n        if (!access_token) {\n          return \"/getstarted\";\n        }\n        if (auth && !auth.user_id) {\n          return \"/getstarted\";\n        }\n      } else if (path === \"/getstarted\" && access_token) {\n        return \"/\";\n      }\n    }\n  }\n});\n",
      "start": 1708870619992,
      "end": 1708870619993,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappingslD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjpnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "result": "/* _processed_nuxt_unctx_transform */\nimport { executeAsync as __executeAsync } from \"/Users/vugarsafarzada/Desktop/Files/Develop/My Projects/e-commercial-app/nuxt-app/node_modules/unctx/dist/index.mjs\";import { defineNuxtRouteMiddleware } from '#app/composables/router';\nimport routeConfig from \"~/assets/scripts/configs/routeConfig\";\nimport { useAuthStore } from \"~/stores/user/auth\";\nexport default defineNuxtRouteMiddleware(async (to, from) => {let __temp, __restore;\n  const { path } = to;\n  const fromPath = from.path;\n  if (true) {\n    const config = routeConfig[path];\n    let {\n      isAuthenticated,\n      authUser,\n      syncTokensFromLocalStorage,\n      setAuthProgressIsLoading,\n      setAfterAuthPath\n    } = useAuthStore();\n    syncTokensFromLocalStorage();\n    const access_token = localStorage.getItem(\"access_token\");\n    if (path) {\n      let auth;\n      if (access_token && !isAuthenticated) {\n        setAuthProgressIsLoading(true);\n        auth = (([__temp,__restore]=__executeAsync(()=>authUser())),__temp=await __temp,__restore(),__temp);\n      } else {\n        setAuthProgressIsLoading(false);\n      }\n      if (config?.auth && !isAuthenticated) {\n        if (path !== fromPath) {\n          setAfterAuthPath(path);\n        }\n        if (!access_token) {\n          return \"/getstarted\";\n        }\n        if (auth && !auth.user_id) {\n          return \"/getstarted\";\n        }\n      } else if (path === \"/getstarted\" && access_token) {\n        return \"/\";\n      }\n    }\n  }\n},1);\n",
      "start": 1708870619993,
      "end": 1708870619994,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "qKAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACplD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,uBAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,yCAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,2CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjpnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,GAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708870619994,
      "end": 1708870619994,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708870619994,
      "end": 1708870619994,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708870619994,
      "end": 1708870619994,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708870619994,
      "end": 1708870619994,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708870619994,
      "end": 1708870619994,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708870619995,
      "end": 1708870619995,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708870619995,
      "end": 1708870619995,
      "order": "normal"
    }
  ]
}
